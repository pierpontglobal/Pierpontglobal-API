{
  "openapi": "3.0.0",
  "info": {
    "title": "Pierpont API",
    "description": "Best collection",
    "version": "1.0"
  },
  "servers": [
    {
      "url": "http://0.0.0.0:3000",
      "variables": {}
    }
  ],
  "paths": {
    "/api/v1/users": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Register user",
        "description": "Register a user to be allowed to consume from the API.",
        "operationId": "RegisterUser",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "application/json","default": "application/json"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "example": {
                  "email": "test@mail.com",
                  "password": "123456789",
                  "username": "testuser",
                  "phone_number": "809-540-0268"
                },
                "$ref": "#/components/schemas/RegisterUserrequest"
              },
              "example": "{\"email\":\"test@mail.com\",\"password\":\"123456789\",\"username\":\"testuser\",\"phone_number\":\"809-540-0268\"}"
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegisterUser"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegisterUserThatAlreadyExists"
                },
                "example": {
                  "error": "Username already exist"
                }
              }
            }
          }
        },
        "security": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/oauth/token": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Get Access Token",
        "description": "Gets the access token requiered to consume from the api.",
        "operationId": "GetAccessToken",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "application/json","default": "application/json"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "example": {
                  "username": "testuser",
                  "password": "123456789",
                  "grant_type": "password"
                },
                "$ref": "#/components/schemas/GetAccessTokenrequest"
              },
              "example": "{\"username\":\"testuser\",\"password\":\"123456789\",\"grant_type\":\"password\"}"
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "access_token": "40bb6cf9bcda1db683dac00384d4d4f4c2fa39dfbc7f5da7c42b584114ad1c27",
                    "token_type": "Bearer",
                    "expires_in": 432000,
                    "created_at": 1538066616
                  },
                  "$ref": "#/components/schemas/AccessTokenResponse"
                },
                "example": {
                  "access_token": "40bb6cf9bcda1db683dac00384d4d4f4c2fa39dfbc7f5da7c42b584114ad1c27",
                  "token_type": "Bearer",
                  "expires_in": 432000,
                  "created_at": 1538066616
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessTokenInvalidCredentialsResponse"
                },
                "example": {
                  "error": "invalid_grant",
                  "error_description": "The provided authorization grant is invalid, expired, revoked, does not match the redirection URI used in the authorization request, or was issued to another client."
                }
              }
            }
          }
        },
        "security": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/api/v1/user/me": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "User",
        "description": "Gets the user information",
        "operationId": "User",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              }
            }
          }
        },
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        },
        "security":[
          {"bearerAuth": []}
        ]
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    },
    "schemas": {
      "RegisterUserrequest": {
        "title": "Register userRequest",
        "required": [
          "email",
          "password",
          "username",
          "phone_number"
        ],
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "example": "test@mail.com"
          },
          "password": {
            "type": "string",
            "example": "123456789"
          },
          "username": {
            "type": "string",
            "example": "testuser"
          },
          "phone_number": {
            "type": "string",
            "example": "809-540-0268"
          }
        },
        "example": {
          "email": "test@mail.com",
          "password": "123456789",
          "username": "testuser",
          "phone_number": "809-540-0268"
        }
      },
      "RegisterUser": {
        "title": "Register user",
        "required": [
          "id",
          "first_name",
          "last_name",
          "email",
          "usernam",
          "phone_number",
          "last_ip",
          "current_ip",
          "address",
          "verified",
          "roles"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "example": 4
          },
          "first_name": {
            "type": "string",
            "nullable": true
          },
          "last_name": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "example": "test@mail.com"
          },
          "usernam": {
            "type": "string",
            "example": "testuser"
          },
          "phone_number": {
            "type": "string",
            "example": "809-540-0268"
          },
          "last_ip": {
            "type": "string",
            "nullable": true
          },
          "current_ip": {
            "type": "string",
            "nullable": true
          },
          "address": {
            "example": {
              "city": null,
              "zip_code": null,
              "primary_address": null,
              "secondary_address": null
            },
            "$ref": "#/components/schemas/Address"
          },
          "verified": {
            "type": "boolean",
            "example": false
          },
          "roles": {
            "type": "array",
            "items": {
              "type": "string",
              "example": []
            },
            "description": ""
          }
        }
      },
      "Address": {
        "title": "Address",
        "required": [
          "city",
          "zip_code",
          "primary_address",
          "secondary_address"
        ],
        "type": "object",
        "properties": {
          "city": {
            "type": "string",
            "nullable": true
          },
          "zip_code": {
            "type": "string",
            "nullable": true
          },
          "primary_address": {
            "type": "string",
            "nullable": true
          },
          "secondary_address": {
            "type": "string",
            "nullable": true
          }
        },
        "example": {
          "city": null,
          "zip_code": null,
          "primary_address": null,
          "secondary_address": null
        }
      },
      "RegisterUserThatAlreadyExists": {
        "title": "Register user that already exists",
        "required": [
          "error"
        ],
        "type": "object",
        "properties": {
          "error": {
            "type": "string",
            "example": "Username already exist"
          }
        },
        "example": {
          "error": "Username already exist"
        }
      },
      "GetAccessTokenrequest": {
        "title": "Get Access TokenRequest",
        "required": [
          "username",
          "password",
          "grant_type"
        ],
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "example": "testuser"
          },
          "password": {
            "type": "string",
            "example": "123456789"
          },
          "grant_type": {
            "type": "string",
            "example": "password"
          }
        },
        "example": {
          "username": "testuser",
          "password": "123456789",
          "grant_type": "password"
        }
      },
      "AccessTokenInvalidCredentialsResponse": {
        "title": "Access Token invalid credentials response",
        "required": [
          "error",
          "error_description"
        ],
        "type": "object",
        "properties": {
          "error": {
            "type": "string",
            "example": "invalid_grant"
          },
          "error_description": {
            "type": "string",
            "example": "The provided authorization grant is invalid, expired, revoked, does not match the redirection URI used in the authorization request, or was issued to another client."
          }
        },
        "example": {
          "error": "invalid_grant",
          "error_description": "The provided authorization grant is invalid, expired, revoked, does not match the redirection URI used in the authorization request, or was issued to another client."
        }
      },
      "AccessTokenResponse": {
        "title": "Access Token response",
        "required": [
          "access_token",
          "token_type",
          "expires_in",
          "created_at"
        ],
        "type": "object",
        "properties": {
          "access_token": {
            "type": "string",
            "example": "40bb6cf9bcda1db683dac00384d4d4f4c2fa39dfbc7f5da7c42b584114ad1c27"
          },
          "token_type": {
            "type": "string",
            "example": "Bearer"
          },
          "expires_in": {
            "type": "integer",
            "format": "int32",
            "example": 432000
          },
          "created_at": {
            "type": "integer",
            "format": "int32",
            "example": 1538066616
          }
        },
        "example": {
          "access_token": "40bb6cf9bcda1db683dac00384d4d4f4c2fa39dfbc7f5da7c42b584114ad1c27",
          "token_type": "Bearer",
          "expires_in": 432000,
          "created_at": 1538066616
        }
      },
      "UserResponse": {
        "title": "User response",
        "required": [
          "id",
          "first_name",
          "last_name",
          "email",
          "username",
          "phone_number",
          "last_ip",
          "current_ip",
          "address",
          "verified",
          "roles"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "example": 4
          },
          "first_name": {
            "type": "string",
            "nullable": true
          },
          "last_name": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "example": "test@mail.com"
          },
          "username": {
            "type": "string",
            "example": "testuser"
          },
          "phone_number": {
            "type": "string",
            "example": "809-540-0268"
          },
          "last_ip": {
            "type": "string",
            "nullable": true
          },
          "current_ip": {
            "type": "string",
            "nullable": true
          },
          "address": {
            "example": {
              "city": null,
              "zip_code": null,
              "primary_address": null,
              "secondary_address": null
            },
            "$ref": "#/components/schemas/Address"
          },
          "verified": {
            "type": "boolean",
            "example": false
          },
          "roles": {
            "type": "array",
            "items": {
              "type": "string",
              "example": []
            },
            "description": ""
          }
        }
      }
    }
  },
  "security": [
    {}
  ]
}